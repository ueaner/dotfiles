# vim: set filetype=yaml.ansible:
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_variables.html#understanding-variable-precedence
---

# Enable Chinese Input Method
chinese: on

# variables

# Like all templating, lookups execute and are evaluated on the Ansible control machine.
# hostname -I parameter is not supported on macOS
# ansible_controller_ipv4_command: "hostname -I | cut -d' ' -f1"
# Compatible with macOS and Linux
ansible_controller_ipv4_command: "[[ $(uname -s) == 'Darwin' ]] && /sbin/ifconfig | grep 'inet ' | grep -v 127.0.0.1 | awk '{print $2}' || hostname -I | cut -d' ' -f1"
ansible_controller_ipv4: "{{ lookup('pipe', ansible_controller_ipv4_command) }}"


# |-: Remove ending newline
# noqa jinja[spacing]
PATH: |-
  {%- set local_bin = ansible_env.XDG_BIN_HOME | default(ansible_env.HOME ~ '/.local/bin') -%}
  {%- set opt_bin = '/opt/local/bin' -%}
  {%- set path = ansible_env.PATH -%}

  {%- if ansible_system == 'Darwin' and opt_bin not in path -%}
    {%- set path = opt_bin ~ ':' ~ path -%}
  {%- endif -%}

  {%- if local_bin not in path.split(':') -%}
    {%- set path = local_bin ~ ':' ~ path -%}
  {%- endif -%}

  {{- path -}}


# In specific task: environment: "{{ proxy_environment }}"
proxy_environment:
  http_proxy: "socks5://{{ ansible_controller_ipv4 }}:1080"
  https_proxy: "socks5://{{ ansible_controller_ipv4 }}:1080"
  # all_proxy: http://127.0.0.1:1080

GITHUB_PROXY: "{{ lookup('env', 'GITHUB_PROXY', default='') }}"

gnome_shell_version_command: if which gnome-shell >/dev/null 2>&1; then gnome-shell --version | cut -f3 -d' ' | cut -f1 -d'.'; fi

desktop_command: |-
  KERNEL=$(uname -s)         # Darwin | Linux
  DESKTOP=                   # Aqua | GNOME | Sway

  # https://www.freedesktop.org/software/systemd/man/latest/os-release.html
  [[ -f /etc/os-release ]] && . /etc/os-release

  if [[ "$KERNEL" == "Darwin" ]]; then
      DESKTOP=Aqua
  elif [[ "$ID" == "fedora" ]]; then
      if [[ "${VARIANT_ID}" == "workstation" ]]; then
          DESKTOP=GNOME
      elif [[ "${VARIANT_ID}" == "sway" ]]; then
          DESKTOP=Sway
      fi
  fi

  printf $DESKTOP

# archives_dir: "{{ ansible_env.XDG_BACKUP_DIR ~ '/archives' if ansible_env.XDG_BACKUP_DIR is defined else ansible_env.HOME ~ '/.cache/archives' }}"
backup_dir: "{{ lookup('env', 'XDG_BACKUP_DIR', default=lookup('env', 'HOME') ~ '/.cache') }}"
archives_dir: "{{ backup_dir ~ '/archives' }}"

# ANSIBLE_ARCHIVES_SERVER defined in ~/.ansible/plugins/callback/my_callback.py
# archives_server: "{{ lookup('env', 'ANSIBLE_ARCHIVES_SERVER', default=archives_dir) }}"
archives_server: "{{ archives_dir if inventory_hostname == 'localhost' else lookup('env', 'ANSIBLE_ARCHIVES_SERVER') }}"


# template for install-package module
template:
  github:
    # The <archive> key is automatically added to $vars.
    # Replace placeholders in template URL with $vars
    version: curl -s https://api.github.com/repos/<repo>/releases/latest | jq -r .tag_name # replace with $vars
    version_v: curl -s https://api.github.com/repos/<repo>/releases/latest | jq -r .tag_name | sed 's/^v//' # use with archive_v
    # https://github.com/arl/gitmux/releases/download/v0.11.2/gitmux_v0.11.2_linux_amd64.tar.gz
    archive: "{{ GITHUB_PROXY }}https://github.com/<repo>/releases/download/<version>/<archive>" # replace with $vars
    archive_v: "{{ GITHUB_PROXY }}https://github.com/<repo>/releases/download/v<version>/<archive>" # use with version_v
    # https://github.com/neovim/neovim/releases/download/nightly/nvim-linux-x86_64.tar.gz
    nightly: "{{ GITHUB_PROXY }}https://github.com/<repo>/releases/download/nightly/<archive>"
    # https://github.com/xremap/xremap/releases/latest/download/xremap-linux-x86_64-gnome.zip
    latest: "{{ GITHUB_PROXY }}https://github.com/<repo>/releases/latest/download/<archive>"
    # Requires grep (v3+) on macOS, and the Ansible target node is local
    # brew install grep
    download-url: curl -s https://api.github.com/repos/<repo>/releases/latest | grep browser_download_url | grep -P '<archive>' | sort | head -n1 | grep -P 'https://.+<archive>' -o


# Defaults env for target nodes
brew_environment:
  VARS_SCOPE: all
