# vim: set filetype=yaml.ansible:
---

# Usage examples:
# ansible-playbook ~/.ansible/unix.yml --list-tasks
# ansible-playbook ~/.ansible/unix.yml --list-tags
#
# ansible-playbook ~/.ansible/unix.yml --extra-vars "role=packages task=download" --tags all-packages
# ansible-playbook ~/.ansible/unix.yml --extra-vars "role=packages" --tags nerd-fonts
# ansible-playbook ~/.ansible/unix.yml --extra-vars "role=packages" --tags lang
# ansible-playbook ~/.ansible/unix.yml --extra-vars "role=packages task=download" --tags go
# ansible-playbook ~/.ansible/unix.yml --extra-vars "role=packages task=install" --tags go
#
# ansible-playbook ~/.ansible/unix.yml -e "role=basic"
# ansible-playbook ~/.ansible/unix.yml -e "role=terminal"
# ansible-playbook ~/.ansible/unix.yml -e "role=fonts"
# ansible-playbook ~/.ansible/unix.yml -e "role=services"

- name: Setup Linux Workstation
  hosts: local
  vars:
    # By default, "role=all" is overridden by the `--extra-vars "role=xxx"` passed on the command line.
    role: all
    local_bin: "{{ ansible_env.XDG_BIN_HOME | default(ansible_env.HOME ~ '/.local/bin') }}"
  environment:
    # Defaults env for target devices
    XDG_CONFIG_HOME: "{{ ansible_env.XDG_CONFIG_HOME | default(ansible_env.HOME ~ '/.config') }}"
    XDG_CACHE_HOME: "{{ ansible_env.XDG_CACHE_HOME | default(ansible_env.HOME ~ '/.cache') }}"
    XDG_DATA_HOME: "{{ ansible_env.XDG_DATA_HOME | default(ansible_env.HOME ~ '/.local/share') }}"
    XDG_STATE_HOME: "{{ ansible_env.XDG_STATE_HOME | default(ansible_env.HOME ~ '/.local/state') }}"
    XDG_BIN_HOME: "{{ ansible_env.XDG_BIN_HOME | default(ansible_env.HOME ~ '/.local/bin') }}"
    # Use the defined local_bin instead of the undefined XDG_BIN_HOME
    PATH: "{{ ansible_env.PATH if local_bin in ansible_env.PATH.split(':') else local_bin ~ ':' ~ ansible_env.PATH }}"
  roles:
    - role: prelude
    # ansible-playbook ~/.ansible/unix.yml --extra-vars "role=packages task=download" --tags all-packages
    - role: packages # Download / Install packages
      when: (role == "all") or (role == "packages")
      tags:
        - packages

    - role: basic  # macOS-ish Desktop Environment
      when: (role == "all") or (role == "basic")
    - role: terminal  # Terminal Environment
      when: (role == "all") or (role == "terminal")
    # ansible-playbook ~/.ansible/unix.yml --extra-vars "role=packages task=download" --tags nerd-fonts
    - role: fonts
      when: (role == "all") or (role == "fonts")
    - role: services
      when: (role == "all") or (role == "services")
    - role: done
      when: (role == "all") or (role == "done")
