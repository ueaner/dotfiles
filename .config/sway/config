# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term alacritty

set $lock swaylock -f
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
set $rofi_cmd rofi \
        -run-command 'swaymsg exec -- {cmd}' \
        -run-shell-command 'swaymsg exec -- {terminal} -e {cmd}' \
        -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland
set $menu $rofi_cmd -show combi -combi-modes "window,drun" -modes combi

# hide title bar
font pango:monospace 0.001
titlebar_padding 1
titlebar_border_thickness 0
for_window [class=".*"] border pixel 3

# gaps
gaps inner 4
gaps outer 0
smart_gaps on

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
#output * bg /usr/share/backgrounds/default.png fill
output * bg $XDG_DATA_HOME/backgrounds/f37-01-night.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
input type:touchpad {
    dwt enabled
    tap enabled
    drag disabled
    drag_lock disabled
    click_method clickfinger
    natural_scroll enabled
    accel_profile adaptive
    #pointer_accel 0.5
}

# https://github.com/swaywm/sway/wiki#input-configuration
input type:keyboard {
    # change keyboard repeat delay and rate
    repeat_delay 200
    repeat_rate 30

    # See /usr/share/X11/xkb/rules/base.lst
    # man xkeyboard-config
    # man sway-input
    #
    # Chromebook keyboard:
    # - Left Alt is swapped with Left Win
    # xkb_layout us
    # xkb_model "chromebook"
    # xkb_options altwin:swap_lalt_lwin
    # xkb_file "~/.config/sway/layout.xkb"

    # Regular keyboard:
    # - Left Alt is swapped with Left Win
    # - Make Caps Lock an additional Esc
    # - [ ] Swap the Fn and Left Ctrl keys. -> Go to UEFI/BIOS
    #       Run "sudo libinput debug-events", press the Fn key and output KEY_FN
    #       https://www.reddit.com/r/linux4noobs/comments/3n7itn/switch_the_fn_key_and_control_key/
    # xkb_options altwin:swap_lalt_lwin,caps:escape

    # Apple keyboard:
    # https://discussion.fedoraproject.org/t/way-to-switch-fn-and-right-control-key/107703/6
    # - Make Caps Lock an additional Esc
    # xkb_options caps:escape
}

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Ctrl+r reload

    # Lock screen
    bindsym $mod+Ctrl+q exec $lock

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+q exec swaymsg exit

     # Screenshots
    bindsym $mod+Ctrl+a exec grim  -g "$(slurp)" ~/Pictures/Screenshots/Screenshot-$(date +'%H:%M:%S.png')
#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right
    # use `Super-h/j/k/l` to Switch freely between tmux panes and sway containers
    bindsym $mod+$left exec ~/.config/sway/sway-tmux left
    bindsym $mod+$down exec ~/.config/sway/sway-tmux down
    bindsym $mod+$up exec ~/.config/sway/sway-tmux up
    bindsym $mod+$right exec ~/.config/sway/sway-tmux right

    # Move the focused window with the same
    bindsym $mod+Left move left
    bindsym $mod+Down move down
    bindsym $mod+Up move up
    bindsym $mod+Right move right

    bindsym $mod+Tab focus next
#
# Workspaces:
#
    # Switch to workspace: with alt+arrow keys
    # - Left Alt is swapped with Left Win
    # - Chromebook keyboard only, Regular keyboard still use alt
    bindsym Ctrl+Right workspace next
    bindsym Ctrl+Left workspace prev
    # Switch to workspace: with number keys
    bindsym $mod+Ctrl+1 workspace number 1
    bindsym $mod+Ctrl+9 workspace number 9

    # Move focused container to workspace: with shift+arrow keys
    bindsym $mod+Shift+Right move container to workspace next
    bindsym $mod+Shift+Left move container to workspace prev
    # Move focused container to workspace: with number keys
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+9 move container to workspace number 9
#
# Layout stuff:
#
    # bindsym $mod+u splitv

    # Make the current focus fullscreen
    bindsym $mod+Ctrl+f fullscreen

    # Toggle the current focus between `tiling` and `floating` mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the `tiling area` and the `floating area`
    bindsym $mod+Shift+space focus mode_toggle
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# Use wev to get the key symbol name.


# mode "command" {
#     bindsym t exec xterm; mode "default"
#     bindsym Escape mode "default"
# }
# bindsym Ctrl+A mode "command"

### Gestures

# Allow switching between workspaces with left and right swipes
# bindgesture swipe:right workspace prev
# bindgesture swipe:left workspace next

bindgesture {
    swipe:right workspace prev
    swipe:left workspace next
    swipe:up move scratchpad
    swipe:down scratchpad show
}


# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
