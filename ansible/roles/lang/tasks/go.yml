# ----------------------------------------------------------------
# Golang, Install/Upgrade
# ----------------------------------------------------------------

---

- name: Install/Upgrade Golang
  tags:
    - upgrade
    - go
  block:

    # Install golang, check file stat

    - name: Check if go is installed
      ansible.builtin.stat:
        path: "~/go/bin/go"
      register: lang_go_check

    - name: Installing Golang (if skipping is already installed)
      when: not lang_go_check.stat.exists
      ansible.builtin.shell: |
        mkdir -p ~/sdk/
        wget -P ~/sdk/ -c https://dl.google.com/go/go{{ versions.go }}.linux-amd64.tar.gz
        rm -rf ~/sdk/go && tar -C ~/sdk/ -xzf ~/sdk/go{{ versions.go }}.linux-amd64.tar.gz

        mkdir -p ~/go/bin/
        ln -sf ~/sdk/go/bin/go ~/go/bin/go
        ln -sf ~/sdk/go/bin/gofmt ~/go/bin/gofmt
      changed_when: false

    # - name: Installing Golang (if skipping is already installed)
    #   ansible.builtin.unarchive:
    #     src: https://go.dev/dl/go{{ versions.go }}.linux-amd64.tar.gz
    #     dest: "~/sdk/"
    #     remote_src: true
    #   when: not lang_go_check.stat.exists
    #   notify: Installed Golang

    # Upgrade golang, check version

    - name: Check if golang version is {{ versions.go }}
      ansible.builtin.command:
        cmd: "~/go/bin/go version"
      changed_when: false
      register: lang_go_version

    - name: Upgrading Golang (if skipping version is already {{ versions.go }})
      when: "versions.go not in lang_go_version.stdout"
      ansible.builtin.shell: |
        ~/go/bin/go install golang.org/dl/go{{ versions.go }}@latest
        ~/go/bin/go{{ versions.go }} download
        rm -rf ~/sdk/go && cp -r ~/sdk/go{{ versions.go }} ~/sdk/go
      changed_when: false

    # Golang Installation Finished, echo version

    - name: Golang Installation Finished
      ansible.builtin.command:
        cmd: "~/go/bin/go version"
      changed_when: false
      register: lang_go_version

    - name: DEBUG go version
      ansible.builtin.debug:
        var: lang_go_version.stdout
