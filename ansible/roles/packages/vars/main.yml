---
# packages for x86_64, Package Keeper -> pk
# NOTE: Avoid double quotes in shell scripts

# Variable Default Values
task: ""
tags_extend: []
tags_prefix: ""

# github_proxy: "{{ ansible_env.GITHUB_PROXY }}"
github_proxy: "{{ lookup('env', 'GITHUB_PROXY', default='') }}"

# gnome_shell_version_command: "gnome-shell --version | cut -d' ' -f3 | cut -d'.' -f1"
# gnome_shell_version: "{{ lookup('pipe', gnome_shell_version_command) }}"
# gnome_shell_version: 47

# curl -s https://src.fedoraproject.org/_dg/bodhi_updates/rpms/kernel-headers | jq -r ".updates.F$VERSION_ID.stable"
# kernel_headers_version: 6.13.3-200.fc41
# kernel_headers_version_slash: "{{ kernel_headers_version.split('-') | join('/') }}"
fedora:
  f41:
    release-date: 2024-10-29
    kernel-headers:
      # https://kojipkgs.fedoraproject.org/packages/kernel-headers/6.11.3/300.fc41/x86_64/kernel-headers-6.11.3-300.fc41.x86_64.rpm
      - 6.11.3-300.fc41
      - 6.12.4-200.fc41
      # kernel-headers-version: kernel-version
      - 6.13.3-200.fc41: 6.13.3-201.fc41
  f42:
    release-date: 2025-04-22
    kernel-headers:
      # https://kojipkgs.fedoraproject.org/packages/kernel-headers/6.14.3/300.fc42/x86_64/kernel-headers-6.14.3-300.fc42.x86_64.rpm
      - 6.14.3-300.fc42
  f43:
    release-date: 2025-11-11
    kernel-headers:
      # https://kojipkgs.fedoraproject.org/packages/kernel-headers/6.17.3/300.fc43/x86_64/kernel-headers-6.17.3-300.fc43.x86_64.rpm
      - 6.17.3-300.fc43

template:
  gnome-shell-extensions:
    version: curl -s --get -L https://extensions.gnome.org/extension-info/ --data-urlencode shell_version=$(gnome-shell --version | cut -d' ' -f3 | cut -d'.' -f1) --data-urlencode uuid=<archive> | jq -r .version_tag
    archive: https://extensions.gnome.org/download-extension/<archive>.shell-extension.zip?version_tag=<version>
    extensions:
      # GNOME 47+ [touchpad: Allow gestures with >3 fingers]: https://gitlab.gnome.org/GNOME/gnome-shell/-/merge_requests/3275
      # Used with libinput-gestures and dotool.
      # - disable-three-finger@lxp-git.github.com # https://extensions.gnome.org/extension/7403/disable-3-finger-gestures/
      # [Touchpad: support three-finger drag configuration]: https://gitlab.gnome.org/GNOME/gnome-control-center/-/issues/3351
      # Edit ~/.local/share/gnome-shell/extensions/gestureImprovements@gestures/metadata.json to add the new GNOME version to the shell-version field, e.g. 48
      #   https://github.com/sidevesh/gnome-gesture-improvements--transpiled
      #   https://github.com/thyttan/gnome-gesture-improvements
      # - gestureImprovements@gestures # https://extensions.gnome.org/extension/4245/gesture-improvements/
      - gnome-shell-go-to-last-workspace@github.com # https://extensions.gnome.org/extension/1089/go-to-last-workspace/
      - clipboard-indicator@tudmotu.com # https://extensions.gnome.org/extension/779/clipboard-indicator/ <Super>bracketleft/bracketright
      - xremap@k0kubun.com # https://extensions.gnome.org/extension/5060/xremap/
      - kimpanel@kde.org # https://extensions.gnome.org/extension/261/kimpanel/
      - system-monitor@gnome-shell-extensions.gcampax.github.com # https://extensions.gnome.org/extension/6807/system-monitor/
      - gsconnect@andyholmes.github.io # https://extensions.gnome.org/extension/1319/gsconnect/
      - color-picker@tuberry # https://extensions.gnome.org/extension/3396/color-picker/
  github:
    # The <archive> key is automatically added to $vars.
    # Replace placeholders in template URL with $vars
    version: curl -s https://api.github.com/repos/<repo>/releases/latest | jq -r .tag_name # replace with $vars
    # https://github.com/arl/gitmux/releases/download/v0.11.2/gitmux_v0.11.2_linux_amd64.tar.gz
    archive: "{{ github_proxy }}https://github.com/<repo>/releases/download/<version>/<archive>" # replace with $vars
    # https://github.com/neovim/neovim/releases/download/nightly/nvim-linux-x86_64.tar.gz
    nightly: "{{ github_proxy }}https://github.com/<repo>/releases/download/nightly/<archive>"
    # https://github.com/xremap/xremap/releases/latest/download/xremap-linux-x86_64-gnome.zip
    latest: "{{ github_proxy }}https://github.com/<repo>/releases/latest/download/<archive>"
    download-url: curl -s https://api.github.com/repos/<repo>/releases/latest | grep browser_download_url | grep -P '<archive>' | sort | head -n1 | grep -P 'https://.+<archive>' -o

# The rules for naming locally saved files are as follows:
#
# 1. The file names should be in lowercase and follow the format:
#    package name-$(uname -s)-$(uname -m)-[gnome/sway].zip/tar.gz/tar.xz/jar/etc.
#    - Examples:
#      - plantuml.jar
#      - SourceCodePro.tar.xz
#      - fnm-darwin.zip
#      - nvim-linux-x86_64.tar.gz
#      - xremap-linux-x86_64-sway.zip
#
# 2. Exception: If the 'use_remote_name' parameter is used, then the original remote file name should be kept.
#    - Examples:
#      - kernel-6.13.3-201.fc41.x86_64.rpm
#      - xremap@k0kubun.com.shell-extension.zip
#
# This ensures consistency and clarity when saving files locally, making it easier to identify the package details
# such as the operating system, CPU architecture, and desktop environment if applicable.

packages:
  # nvim-nightly:
  #   repo: neovim/neovim
  #   use: nightly # latest, nightly, regex
  #   archives:
  #     - nvim-linux-x86_64.tar.gz
  #     - nvim-macos-x86_64.tar.gz
  #
  # nvim-nightly:
  #   vars:
  #     repo: neovim/neovim
  #   # {{ "Name: %s, Age: %d, Score: %.2f, Hex: %x" | format(uname, age, score, hex_value) }}
  #   template: "{{ template.github.nightly }}"
  #   archives:
  #     # <archive>: $archives[N].key
  #     - nvim-linux-x86_64.tar.gz
  #     # <archive>: $archives[N].value
  #     # https://github.com/neovim/neovim/releases/download/nightly/nvim-macos-x86_64.tar.gz
  #     - nvim-darwin-x86_64.tar.gz: nvim-macos-x86_64.tar.gz
  #   strip: 1
  #   dst: $XDG_DATA_HOME/nvim-nightly # defaults to $XDG_BIN_HOME
  #   proxy: # unused
  #     site: "{{ ansible_env.GITHUB_PROXY }}"
  #     tunnel: http://127.0.0.1:1080
  #   install-post: |
  #     ln -sf $(which nvim) /usr/local/bin/vim

  gnome-shell-extensions:
    vars:
      gnome-shell-version: gnome-shell --version | cut -d' ' -f3 | cut -d'.' -f1
      version: "{{ template['gnome-shell-extensions'].version }}"
    template: "{{ template['gnome-shell-extensions'].archive }}"
    # download to $XDG_BACKUP_DIR/archives/gnome-shell-extensions
    # Subdirectory under {{ archives_dir }}
    archives_subdir: "gnome-shell-extensions"
    # remote name with <version>
    use_remote_name: 2
    archives: "{{ template['gnome-shell-extensions'].extensions }}"
    # archives: "{{ template['gnome-shell-extensions'].extensions | product(['.shell-extension.zip']) | map('join') | list }}"
    # Automatically enter the archives_dir directory to execute scripts
    install: |-
      if ! ps aux | grep -q '[g]nome-session'; then
          echo 'Non-GNOME environment'
          exit 0
      fi
      if [[ -n $SSH_CLIENT ]]; then
          echo 'Non-local environment'
          exit 0
      fi
      for f in *.shell-extension.zip; do
          echo gnome-extensions install --force $f
          gnome-extensions install --force $f
      done

  nerd-fonts:
    vars:
      repo: ryanoasis/nerd-fonts
    template: "{{ template.github.latest }}"
    # yq -r '.archives[]'
    archives:
      - SourceCodePro.tar.xz
    dst: ~/.local/share/fonts/SourceCodePro

  tldr-pages.en:
    vars:
      repo: tldr-pages/tldr
    template: "{{ template.github.latest }}"
    archives:
      - tldr-pages.en.zip
    dst: ~/.cache/tldr/pages

  tldr-pages.zh:
    vars:
      repo: tldr-pages/tldr
    template: "{{ template.github.latest }}"
    archives:
      - tldr-pages.zh.zip
    dst: ~/.cache/tldr/pages.zh

  tldr:
    install: |-
      python -m pip install --upgrade --user tldr

  # rename, remove, and copy files and directories using your editor
  edir:
    install: |-
      python -m pip install --upgrade --user edir

  xremap:
    vars:
      repo: xremap/xremap
    template: "{{ template.github.latest }}"
    archives:
      - xremap-linux-x86_64-gnome.zip
      - xremap-linux-x86_64-sway.zip: xremap-linux-x86_64-wlroots.zip
    dst: $XDG_BIN_HOME # defaults to $XDG_BIN_HOME
    include:
      - xremap

  shadowsocks-rust:
    vars:
      repo: shadowsocks/shadowsocks-rust
      version: "{{ template.github.version }}"
    template: "{{ template.github.archive }}"
    archives:
      - shadowsocks-linux-x86_64.tar.xz: shadowsocks-<version>.x86_64-unknown-linux-gnu.tar.xz
      - shadowsocks-darwin-x86_64.tar.xz: shadowsocks-<version>.x86_64-apple-darwin.tar.xz
    include:
      - sslocal
      - ssmanager
      - ssserver
      - ssservice
      - ssurl

  gitmux:
    vars:
      repo: arl/gitmux
      version: "{{ template.github.version }}"
    template: "{{ template.github.archive }}"
    archives:
      - gitmux-linux-x86_64.tar.gz: gitmux_<version>_linux_amd64.tar.gz
      - gitmux-darwin-x86_64.tar.gz: gitmux_<version>_macOS_amd64.tar.gz
    include:
      - gitmux

  lazygit:
    vars:
      repo: jesseduffield/lazygit
      # Avoid double quotes in shell scripts
      download-url: "{{ template.github['download-url'] }}"
    template: "{{ github_proxy }}<download-url>"
    archives:
      # The requested version number is "v0.48.0", but the archive name uses "0.48.0" without the "v".
      # https://github.com/jesseduffield/lazygit/releases/download/v0.48.0/lazygit_0.48.0_Linux_x86_64.tar.gz
      - lazygit-linux-x86_64.tar.gz: lazygit_.+_Linux_x86_64.tar.gz
      # https://github.com/jesseduffield/lazygit/releases/download/v0.48.0/lazygit_0.48.0_Darwin_x86_64.tar.gz
      - lazygit-darwin-x86_64.tar.gz: lazygit_.+_Darwin_x86_64.tar.gz
    include:
      - lazygit

  bottom:
    vars:
      repo: ClementTsang/bottom
    template: "{{ template.github.latest }}"
    archives:
      - bottom-linux-x86_64.tar.gz: bottom_x86_64-unknown-linux-gnu.tar.gz
      - bottom-darwin-x86_64.tar.gz: bottom_x86_64-apple-darwin.tar.gz
    include:
      - btm

  task:
    vars:
      repo: go-task/task
    template: "{{ template.github.latest }}"
    archives:
      - task-linux-x86_64.tar.gz: task_linux_amd64.tar.gz
      - task-darwin-x86_64.tar.gz: task_darwin_amd64.tar.gz
    include:
      - task

  fnm:
    vars:
      repo: Schniz/fnm
    template: "{{ template.github.latest }}"
    archives:
      - fnm-linux.zip: fnm-linux.zip
      - fnm-darwin.zip: fnm-macos.zip
    include:
      - task

  scc:
    vars:
      repo: boyter/scc
    template: "{{ template.github.latest }}"
    archives:
      - scc-linux-x86_64.tar.gz: scc_Linux_x86_64.tar.gz
      - scc-darwin-x86_64.tar.gz: scc_Darwin_x86_64.tar.gz
    include:
      - scc

  zk:
    vars:
      repo: mickael-menu/zk
      version: "{{ template.github.version }}"
    template: "{{ template.github.archive }}"
    archives:
      - zk-linux-x86_64.tar.gz: zk-<version>-linux-amd64.tar.gz
      - zk-darwin-x86_64.tar.gz: zk-<version>-macos-x86_64.tar.gz
    include:
      - zk

  wasm-pack:
    vars:
      repo: rustwasm/wasm-pack
      version: "{{ template.github.version }}"
    template: "{{ template.github.archive }}"
    archives:
      - wasm-pack-linux-x86_64.tar.gz: wasm-pack-<version>-x86_64-unknown-linux-musl.tar.gz
      - wasm-pack-darwin-x86_64.tar.gz: wasm-pack-<version>-x86_64-apple-darwin.tar.gz
    strip: 1
    include:
      - wasm-pack
      # wasm-pack-v0.13.1-x86_64-unknown-linux-musl/wasm-pack
      # - "*/wasm-pack"

  plantuml:
    vars:
      repo: plantuml/plantuml
    template: "{{ template.github.latest }}"
    archives:
      - plantuml.jar

  deno:
    vars:
      repo: denoland/deno
    template: "{{ template.github.latest }}"
    archives:
      # https://github.com/denoland/deno/releases/latest/download/deno-x86_64-unknown-linux-gnu.zip
      - deno-linux-x86_64.zip: deno-x86_64-unknown-linux-gnu.zip
      # https://github.com/denoland/deno/releases/latest/download/deno-x86_64-apple-darwin.zip
      - deno-darwin-x86_64.zip: deno-x86_64-apple-darwin.zip
    include:
      - deno
    install-post: |
      deno completions zsh > ~/.local/share/zsh/site-functions/_deno
      deno --version

  # Install to $XDG_DATA_HOME/<lang>
  # Link <lang>/bin/* to /usr/local/bin
  go:
    vars:
      version: curl -s 'https://golang.google.cn/VERSION?m=text' | head -n1
    archives:
      # https://dl.google.com/go/go1.24.0.linux-amd64.tar.gz
      - go-linux-x86_64.tar.gz: https://dl.google.com/go/<version>.linux-amd64.tar.gz
      - go-darwin-x86_64.tar.gz: https://dl.google.com/go/<version>.linux-amd64.tar.gz
    strip: 1
    dst: $XDG_DATA_HOME/go # defaults to $XDG_BIN_HOME
    install-post: |
      ln -sf $XDG_DATA_HOME/go/bin/* /usr/local/bin/
      curl --create-dirs -L -o ~/.local/share/zsh/site-functions/_golang \
           ${GITHUB_PROXY}https://raw.githubusercontent.com/zsh-users/zsh-completions/master/src/_golang
      go version

  node:
    vars:
      version: curl -s -L https://nodejs.org/download/release/index.json | jq -r '[.[] | select(.lts!=false)] | sort_by(.lts, .version) | reverse | .[0].version'
    # https://nodejs.org/dist/v22.14.0/node-v22.14.0-linux-x64.tar.xz
    archives:
      - node-linux-x86_64.tar.xz: https://nodejs.org/dist/<version>/node-<version>-linux-x64.tar.xz
      - node-darwin-x86_64.tar.xz: https://nodejs.org/dist/<version>/node-<version>-darwin-x64.tar.xz
    strip: 1
    dst: $XDG_DATA_HOME/node # defaults to $XDG_BIN_HOME
    install-post: |
      ln -sf $XDG_DATA_HOME/node/bin/* /usr/local/bin/
      corepack enable pnpm
      pnpm config set global-bin-dir ~/.local/bin
      pnpm completion zsh > ~/.local/share/zsh/site-functions/_pnpm
      curl --create-dirs -L -o ~/.local/share/zsh/site-functions/_node \
          ${GITHUB_PROXY}https://raw.githubusercontent.com/zsh-users/zsh-completions/master/src/_node
      node --version

  # https://developer.fedoraproject.org/tech/languages/rust/rust-installation.html
  rust:
    # https://static.rust-lang.org/dist/rust-1.84.1-x86_64-unknown-linux-gnu.tar.xz
    install: |-
      export CARGO_HOME=$XDG_DATA_HOME/cargo
      export RUSTUP_HOME=$XDG_DATA_HOME/rustup

      if [[ ! -x $CARGO_HOME/bin/rustc ]]; then
          curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path -y
          $CARGO_HOME/bin/rustup default stable
      else
          rustup self update
          rustup update
      fi
      $CARGO_HOME/bin/rustc --version

      # install-post error: no default toolchain is configured
      ln -sf $XDG_DATA_HOME/cargo/bin/* /usr/local/bin/
      ln -sf $XDG_DATA_HOME/rustup/toolchains/$(rustup default | cut -d ' ' -f1)/share/zsh/site-functions/_cargo \
          ~/.local/share/zsh/site-functions/_cargo
      rustup completions zsh > ~/.local/share/zsh/site-functions/_rustup
      rustc --version

  zig:
    vars:
      # version: curl -s -L https://ziglang.org/download/index.json | jq -r 'del(.master) | keys_unsorted | sort_by( split(".") | map(tonumber) ) | last'
      version: curl -s -L https://ziglang.org/download/index.json | jq -r 'del(.master) | keys_unsorted | first'
    # https://ziglang.org/download/0.13.0/zig-linux-x86_64-0.13.0.tar.xz
    archives:
      - zig-linux-x86_64.tar.gz: https://ziglang.org/download/<version>/zig-linux-x86_64-<version>.tar.xz
      - zig-darwin-x86_64.tar.gz: https://ziglang.org/download/<version>/zig-macos-x86_64-<version>.tar.xz
    strip: 1
    dst: $XDG_DATA_HOME/zig # defaults to $XDG_BIN_HOME
    install-post: |
      ln -sf $XDG_DATA_HOME/zig/zig /usr/local/bin/
      curl --create-dirs -L -o ~/.local/share/zsh/site-functions/_zig \
          ${GITHUB_PROXY}https://raw.githubusercontent.com/ziglang/shell-completions/master/_zig
      zig version

  # TODO: Android

dnf:
  - wl-clipboard
  - difftastic
  - git-delta
  # - lazygit  # github OR dnf copr enable atim/lazygit
  # - gitmux  # github
  - fd-find
  - ripgrep
  - bat
  - fzf
  - zoxide
  - yq # go: jq replacement for YAML
  - zsh
  - tmux
  - alacritty
  - fastfetch # duf, btm
  - xlsclients # list x11 client applications running on a display
  - dua-cli # rust: disk
  - duf # go: disk
  - tree-sitter-cli # rust: tree-sitter
  - neovim # depends: tree-sitter-cli, nodejs
  - man-pages-zh-CN
  - groff
  # - golang
  # - nodejs
  # - nodejs-npm # mason.nvim depends on npm
  # - gnome-shell-extension-system-monitor
  # - gnome-shell-extension-gsconnect

flatpak:
  - ca.desrt.dconf-editor
  - com.baidu.NetDisk
  - com.github.phase1geo.minder
  - com.github.tchx84.Flatseal
  - com.google.Chrome
  # Add the following to `~/.local/share/flatpak/overrides/com.qq.QQ` to enable wayland or configure with Flatseal
  # [Context]
  # sockets=wayland;!x11
  - com.qq.QQ
  - com.tencent.WeChat
  - org.mozilla.Thunderbird
  - dev.zed.Zed
  - io.gitlab.news_flash.NewsFlash
  - io.podman_desktop.PodmanDesktop
  - org.blender.Blender
  - org.inkscape.Inkscape
  - org.shotcut.Shotcut
  - com.obsproject.Studio
  - org.videolan.VLC
  - net.base_art.Glide
  - in.srev.guiscrcpy
  - eu.nokun.MirrorHall # Use Linux devices as second screens
  - org.freedesktop.Bustle
  - org.gnome.dspy
  - org.gnome.Sudoku
  - org.gnome.Decibels # music
