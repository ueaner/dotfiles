---

# Running xremap without sudo

# https://github.com/xremap/xremap#running-xremap-without-sudo
- name: Check if udev xremap-input.rules exists
  ansible.builtin.stat:
    path: "/usr/lib/udev/rules.d/00-xremap-input.rules"
  register: services_input_rules_check

- name: Running xremap without sudo (+uaccess)
  when: not services_input_rules_check.stat.exists
  ansible.builtin.shell: |
    set -o pipefail
    # getent group input >/dev/null || sudo groupadd -r input
    sudo gpasswd -a $USER input
    # cat /etc/group | grep input
    # echo 'KERNEL=="uinput", MODE="0660", GROUP="input", TAG+="uaccess"' | sudo tee /etc/udev/rules.d/input.rules
    echo 'KERNEL=="uinput", GROUP="input", TAG+="uaccess"' | sudo tee /usr/lib/udev/rules.d/00-xremap-input.rules
    # sudo modprobe uinput
    sudo udevadm control --reload && sudo udevadm trigger
  changed_when: false

# Install and start xremap service
# https://github.com/ueaner/dotfiles/blob/main/.config/systemd/user/xremap.service
# https://github.com/ueaner/dotfiles/tree/main/.config/autostart/xremap.desktop

- name: Check if xremap is installed
  ansible.builtin.stat:
    path: "~/.local/bin/xremap"
  register: services_xremap_check

- name: Install xremap (GNOME Wayland)
  when:
    - not services_xremap_check.stat.exists
    - desktop_name == "gnome"
  ansible.builtin.command: "cargo install xremap --features gnome"
  changed_when: false
  notify: Start xremap service

- name: Install xremap (Sway)
  when:
    - not services_xremap_check.stat.exists
    - desktop_name == "sway"
  ansible.builtin.command: "cargo install xremap --features wlroots"
  changed_when: false
  notify: Start xremap service
