---

- name: Install neovim/neovide
  environment:
    # lookup GITHUB_PROXY from Ansible controller
    GITHUB_PROXY: "{{ lookup('env', 'GITHUB_PROXY', default='') }}"
  tags:
    - neovim
  when:
    - ansible_system == "Linux"
    - ansible_architecture == "x86_64"
  block:

    - name: Install/Upgrade neovim
      ansible.builtin.shell: |
        set -o pipefail
        sudo dnf install tree-sitter-cli neovim --setopt=install_weak_deps=False
        ln -sf $(which nvim) /usr/local/bin/vim
      changed_when: false

    - name: Install/Upgrade neovide
      # environment: "{{ proxy_env }}"
      ansible.builtin.unarchive:
        src: "{{ ansible_env.GITHUB_PROXY }}https://github.com/neovide/neovide/releases/latest/download/neovide-linux-x86_64.tar.gz"
        dest: ~/.local/bin
        remote_src: true
        include: neovide

    - name: Download neovide desktop files
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: "0644"
        force: true
      loop:
        - { url: '{{ neovide_url_prefix }}/neovide.svg', dest: '~/.local/share/icons/neovide.svg' }
        - { url: '{{ neovide_url_prefix }}/neovide.desktop', dest: '~/.local/share/applications/neovide.desktop' }
      vars:
        # noqa var-naming[no-role-prefix]
        neovide_url_prefix: "{{ ansible_env.GITHUB_PROXY }}https://github.com/neovide/neovide/raw/refs/heads/main/assets"
      changed_when: false

    - name: Update desktop database
      ansible.builtin.command:
        cmd: update-desktop-database ~/.local/share/applications
      changed_when: false

- name: Check if nvimrc exists
  ansible.builtin.stat:
    path: "$HOME/.config/nvim"
  register: terminal_nvimrc_check

- name: Install nvimrc
  # noqa command-instead-of-module
  ansible.builtin.shell: |
    git clone https://github.com/ueaner/nvimrc.git $HOME/.config/nvim
  changed_when: false
  when: not terminal_nvimrc_check.stat.exists
