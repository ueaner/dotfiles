#!/usr/bin/env bash
# @depends: go, yq

echo "$$ mytask: ---------- $(date "+%Y-%m-%d %T.%6N") ----------" >>/tmp/mytask.log

# shellcheck source=base.sh
source ~/bin/base.sh

### check-update kernel-headers

function check-update-kernel-headers() {
    latest_version=$(kernel-headers-latest-version)
    current_version=$(rpm -q --queryformat '%{name}-%{version}-%{release}' kernel-headers)

    if [[ "$latest_version" == "null" ]] || version-lte "$latest_version" "$current_version"; then
        printf "Fedora kernel-headers: no updates available\n" >>/tmp/mytask.log
        return
    fi

    ignore_versions=(
        # https://discussion.fedoraproject.org/t/broadcom-wl-not-working-after-upgrading-kernel-to-6-12-4/139948
        # https://bugzilla.rpmfusion.org/show_bug.cgi?id=7130
        # https://github.com/rpmfusion/wl-kmod/commit/16a67f7
        # "kernel-headers-6.12.4-200.fc41"
        "kernel-headers-6.13.3-200.fc41"
    )

    for item in "${ignore_versions[@]}"; do
        if [[ "$item" == "$latest_version" ]]; then
            echo "Fedora kernel-headers: ignore $item" >>/tmp/mytask.log
            return
        fi
    done

    . /etc/os-release
    VERSION_ID_PREV=$((VERSION_ID - 1))

    printf "Fedora kernel-headers: updates available\n%s\n" "$latest_version" >>/tmp/mytask.log
    # shellcheck source=/dev/null
    source "$HOME/.local/etc/token.sh"
    "$HOME/bin/sendmail.go" "Fedora kernel-headers updates available" <<EOF
${latest_version}


1. See:

    - https://src.fedoraproject.org/rpms/kernel-headers
    - [Fedora Discussion]: https://discussion.fedoraproject.org/ tags: #broadcom #wifi #macbook #f${VERSION_ID}
    - [RPM Fusion Bugzilla]: https://bugzilla.rpmfusion.org/buglist.cgi?bug_status=all&component=broadcom-wl&component=wl-kmod&order=bug_id%20DESC&product=Fedora&version=f${VERSION_ID}&version=f${VERSION_ID_PREV}
    - [RPM Fusion wl-kmod]: https://github.com/rpmfusion/wl-kmod
          http://mirror.bjtu.edu.cn/rpmfusion/nonfree/fedora/updates/41/x86_64/repoview/index.html

2. Upgrading the Kernel:

    ~/bin/kernel-broadcom-wl

    # OR

    sudo dnf upgrade --refresh
    sudo dnf changelog akmod-wl
    sudo dnf update akmods akmod-wl broadcom-wl
    sudo sed -i '/exclude=kernel/d' /etc/dnf/dnf.conf
    sudo dnf update kernel\*
    echo 'exclude=kernel*' | sudo tee -a /etc/dnf/dnf.conf

    # Check if the new kmod-wl build was successful
    rpm -qa | grep kmod-wl
    sudo akmods

EOF
}

check-update-kernel-headers

### Check for updates to the Fedora release

function check-update-fedora-release() {
    # https://fedorapeople.org/groups/schedule/f-42/f-42-key-tasks.html
    releases=(
        f42 2025-04-22
        f43 2025-11-11
    )

    ver=$(($(awk '{print $3}' </etc/redhat-release) + 1))
    check=false
    release_date=

    # 0-based indexing
    index_offset=0
    if [[ -n "$ZSH_VERSION" && ! -o KSH_ARRAYS ]]; then
        # 1-based indexing
        index_offset=1
    fi

    # Set Zsh arrays to be 0-indexed
    # This is how KSH and Bash behave
    # [[ $index_offset -eq 1 ]] && setopt KSH_ARRAYS
    #
    # do something ...
    #
    # Revert Zsh arrays to be 1-indexed
    # [[ $index_offset -eq 1 ]] && unsetopt KSH_ARRAYS

    for ((i = 0; i < ${#releases[@]} / 2; i++)); do
        fversion=${releases[i * 2 + $index_offset]}
        fdate=${releases[i * 2 + 1 + $index_offset]}
        if [[ "${fversion}" == "f${ver}" ]]; then
            release_date=$fdate
            if version-lte "${fdate}" "$(date '+%Y-%m-%d')"; then
                check=true
                break
            fi
        fi
    done

    if ! $check; then
        echo "Fedora $ver Non-stable, $release_date" >>/tmp/mytask.log
        return
    fi

    # ver=$(expr "$(awk '{print $3}' </etc/redhat-release)" + 1)
    httpcode=$(curl --silent --head "https://mirror.nyist.edu.cn/fedora/releases/$ver/" | awk '/^HTTP/{print $2}')

    if [ "$httpcode" != "200" ]; then
        echo "Fedora $ver Unreleased, $httpcode" >>/tmp/mytask.log
        return
    fi

    echo "Fedora $ver Released" >>/tmp/mytask.log
    # shellcheck source=/dev/null
    source "$HOME/.local/etc/token.sh"
    "$HOME/bin/sendmail.go" "Fedora $ver Released" <<EOF

https://fedoraproject.org/zh-Hans/workstation/download

https://mirror.nyist.edu.cn/fedora/releases/$ver/

EOF
}

check-update-fedora-release
